{"version":3,"sources":["assets/images/marcotejeda-logo.svg","assets/images/marcotejeda-logo-dark.svg","themes/globalStyles.js","themes/themes.js","components/wrapper.js","components/switch.js","components/header.js","components/button.js","components/social.js","pages/home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","GlobalStyles","createGlobalStyle","theme","body","text","lightTheme","switchBackgroud","switchBullet","buttonBackground","buttonBorder","buttonText","darkTheme","WrapperStyled","Styled","div","Wrapper","children","SwitchStyled","Switch","props","type","onChange","onToggle","checked","className","id","htmlFor","HeaderStyled","header","Header","src","isDarkTheme","logoDark","logo","alt","ButtonStyled","a","Button","href","link","target","Socialstyled","Social","icon","linkedin","twitter","github","devTo","HomeStyled","Home","App","useState","setIsDarkTheme","changeMedia","mq","matches","useEffect","window","matchMedia","addListener","removeListener","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.210884b1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/marcotejeda-logo.8f15eb23.svg\";","module.exports = __webpack_public_path__ + \"static/media/marcotejeda-logo-dark.7004d4b3.svg\";","import { createGlobalStyle } from 'styled-components'\n\nexport const GlobalStyles = createGlobalStyle`\n  body {\n    background: ${({ theme }) => theme.body};\n    color: ${({ theme }) => theme.text};\n    font-family: 'Montserrat', sans-serif;\n    font-size: 14px;\n    margin: 0;\n    transition: background 0.2s linear;\n  }\n  `","export const lightTheme = {\n  body: '#FFF',\n  text: '#222831',\n  switchBackgroud: '#393E46',\n  switchBullet: '#FFF',\n  buttonBackground: 'transparent',\n  buttonBorder: '#00ADB5',\n  buttonText: '#00ADB5'\n}\nexport const darkTheme = {\n  body: '#222831',\n  text: '#EEE',\n  switchBackgroud: 'linear-gradient(to right, #00ADB5 30%, #37ce8f 100%)',\n  switchBullet: '#222831',\n  buttonBackground: '#00ADB5',\n  buttonBorder: '#00ADB5',\n  buttonText: '#FFF'\n}","import React from 'react'\nimport Styled from 'styled-components'\n\nconst WrapperStyled = Styled.div`\n  max-width: 1260px;\n  margin: auto;\n  padding: 0 20px\n`\n\nfunction Wrapper({children}){\n  return(\n    <WrapperStyled>\n      {children}\n    </WrapperStyled>\n  )\n}\n\nexport default Wrapper","import React from 'react'\nimport Styled from 'styled-components'\n\nconst SwitchStyled = Styled.div`\n  .checkbox{\n    display: none;\n    &:checked ~ .switch:before{\n      transform: translateX(35px);\n    }\n  }\n  .switch{\n    height: 35px;\n    display: block;\n    border-radius: 20px;\n    background: ${({ theme }) => theme.switchBackgroud};\n    width: 70px;\n    padding: 5px;\n    box-sizing: border-box;\n    cursor: pointer;\n    user-select: none;\n    &::before{\n      content: \"\";\n      display: block;\n      width: 25px;\n      height: 25px;\n      background: ${({ theme }) => theme.switchBullet};\n      border-radius: 50%;\n      transform: translateX(0);\n      transition: .3s;\n      will-change: transform;\n    }\n  }\n`\n\nfunction Switch(props) {\n\n  function handleChange() {\n    props.onToggle()\n  }\n\n  return(\n    <SwitchStyled>\n      <input \n        type=\"checkbox\" \n        onChange={handleChange} \n        checked={props.checked} \n        className=\"checkbox\" \n        id=\"checkbox\" \n      />\n      <label \n        className=\"switch\" \n        htmlFor=\"checkbox\"\n      />\n    </SwitchStyled>\n  )\n}\n\nexport default Switch","import React from 'react'\nimport Styled from 'styled-components'\nimport logo from './../assets/images/marcotejeda-logo.svg'\nimport logoDark from './../assets/images/marcotejeda-logo-dark.svg'\nimport Wrapper from './../components/wrapper'\nimport Switch from './../components/switch'\n\nconst HeaderStyled = Styled.header`\n  height: 40px;\n  padding: 20px 0;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  .logo{\n    align-items: center;\n    display: flex;\n    imgÂ {height: 40px;}\n    h1 {\n      font-size: 1.6em;\n      font-weight: 200;\n      margin: 0 0 0 .2em;\n    }\n  }\n`\n\nfunction Header(props){\n  return(\n    <Wrapper>\n      <HeaderStyled>\n        <div className=\"logo\">\n          <img \n            src={props.isDarkTheme ? logoDark : logo} \n            alt=\"logo marcotejeda.com\"\n          />\n          <h1>Marco Tejeda</h1>\n        </div>\n        <Switch \n          onToggle={props.onToggle}\n          checked={props.isDarkTheme}\n        />\n      </HeaderStyled>\n    </Wrapper>\n  )\n}\n\nexport default Header","import React from 'react'\nimport Styled from 'styled-components'\n\nconst ButtonStyled = Styled.a`\n  cursor: pointer;\n  color: ${({ theme }) => theme.buttonText};\n  background: ${({ theme }) => theme.buttonBackground};\n  border: 2px solid ${({ theme }) => theme.buttonBorder};\n  border-radius: 2em;\n  display:inline-block;\n  padding: 1em 2em;\n  text-decoration: none;\n  font-weight: 700;\n  margin: 1em 0;\n  &:hover{\n    background: #00ADB5;\n    color: white;\n  }\n`\n\nfunction Button(props) {\n  return(\n    <ButtonStyled \n      href={props.link}\n      target={props.target}>\n        {props.text}\n    </ButtonStyled>\n  )\n}\n\nexport default Button","import React from 'react'\nimport Styled from 'styled-components'\nimport { Icon } from '@iconify/react'\nimport devTo from '@iconify/icons-mdi/dev-to'\nimport twitter from '@iconify/icons-mdi/twitter'\nimport linkedin from '@iconify/icons-mdi/linkedin'\nimport github from '@iconify/icons-mdi/github'\n\nconst Socialstyled = Styled.div`\n  font-size: 2.5em;\n  margin: .3em 0;\n  a{\n    color: ${({ theme }) => theme.text};\n    &:hover{color: #00ADB5;}\n  }\n`\n\nfunction Social() {\n  return(\n    <Socialstyled>\n      <a href=\"https://pe.linkedin.com/in/marcotejeda\" target='_blank'><Icon icon={linkedin} /></a>\n      <a href=\"https://twitter.com/olvidemiusuario\" target='_blank'><Icon icon={twitter} /></a>\n      <a href=\"https://github.com/marcotejeda\" target='_blank'><Icon icon={github} /></a>\n      <a href=\"https://dev.to/marcotejeda\" target='_blank'><Icon icon={devTo} /></a>\n    </Socialstyled>\n  )\n}\n\nexport default Social","import React from 'react'\nimport Styled from 'styled-components'\nimport Wrapper from './../components/wrapper'\nimport Button from './../components/button'\nimport Social from './../components/social'\n\nconst HomeStyled = Styled.div`\n  section{\n    &:nth-child(1){\n      display: flex;\n      font-size: .9em;\n      flex-direction: column;\n      align-items: self-start;\n      justify-content: center;\n      min-height: 280px;\n      p{ \n        margin: 0;\n        max-width: 200px;\n      }\n    }\n    &:nth-child(2){\n      padding: 0 0 20px 0;\n      p{\n        font-size: 2.5em;\n        margin: 0;\n        line-height: 1.1em;\n        span{color: #00ADB5;}\n      }\n      .text200{font-weight: 200;}\n      .text800{font-weight: 800;}\n    }\n  }\n`\n\nfunction Home() {\n  return(\n    <Wrapper>\n      <HomeStyled>\n        <section>\n          <p>With over 7 years of professional experience.</p>\n          <Button\n            link='https://drive.google.com/file/d/0B_47zfjaBuhQUVQ4ZHNDRGlCRm8/edit'\n            target='_blank'\n            text='Download CV'\n          />\n        </section>\n        <section>\n          <Social/>\n          <p className=\"text200\">MOBILE <span>&</span> WEB</p>\n          <p className=\"text800\">DEVELOPER<span>.</span></p>\n        </section>\n      </HomeStyled>\n    </Wrapper>\n  )\n}\n\nexport default Home","import React, { useState, useEffect } from 'react'\nimport { ThemeProvider } from 'styled-components'\nimport { GlobalStyles } from './themes/globalStyles'\nimport { lightTheme, darkTheme } from './themes/themes'\nimport Header from './components/header'\nimport Home from './pages/home'\n\nfunction App() {\n\n  const [isDarkTheme, setIsDarkTheme] = useState(false)\n  const themeToggler = () => setIsDarkTheme(!isDarkTheme)\n\n  function changeMedia(mq) {\n    setIsDarkTheme(mq.matches)\n  }\n  \n  useEffect(() => {\n    const mq = window.matchMedia('(prefers-color-scheme: dark)')\n    mq.addListener(changeMedia)\n    setIsDarkTheme(mq.matches)\n    return () => mq.removeListener(changeMedia)\n  },[])\n\n  return (\n    <ThemeProvider theme={isDarkTheme ? darkTheme : lightTheme}>\n      <GlobalStyles/>\n      <Header \n        onToggle={themeToggler}\n        isDarkTheme={isDarkTheme}\n      />\n      <Home/>\n    </ThemeProvider>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}